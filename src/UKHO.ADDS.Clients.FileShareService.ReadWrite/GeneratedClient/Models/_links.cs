// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace UKHO.ADDS.Clients.Kiota.FileShareService.Models
{
    /// <summary>
    /// Links, usually describing links to next and previous pages in a paged result.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class _links : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The first property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link? First { get; set; }
#nullable restore
#else
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link First { get; set; }
#endif
        /// <summary>The last property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link? Last { get; set; }
#nullable restore
#else
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link Last { get; set; }
#endif
        /// <summary>The next property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link? Next { get; set; }
#nullable restore
#else
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link Next { get; set; }
#endif
        /// <summary>The previous property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link? Previous { get; set; }
#nullable restore
#else
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link Previous { get; set; }
#endif
        /// <summary>The self property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link? Self { get; set; }
#nullable restore
#else
        public global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link Self { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::UKHO.ADDS.Clients.Kiota.FileShareService.Models._links"/> and sets the default values.
        /// </summary>
        public _links()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::UKHO.ADDS.Clients.Kiota.FileShareService.Models._links"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::UKHO.ADDS.Clients.Kiota.FileShareService.Models._links CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::UKHO.ADDS.Clients.Kiota.FileShareService.Models._links();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "first", n => { First = n.GetObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>(global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link.CreateFromDiscriminatorValue); } },
                { "last", n => { Last = n.GetObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>(global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link.CreateFromDiscriminatorValue); } },
                { "next", n => { Next = n.GetObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>(global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link.CreateFromDiscriminatorValue); } },
                { "previous", n => { Previous = n.GetObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>(global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link.CreateFromDiscriminatorValue); } },
                { "self", n => { Self = n.GetObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>(global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>("first", First);
            writer.WriteObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>("last", Last);
            writer.WriteObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>("next", Next);
            writer.WriteObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>("previous", Previous);
            writer.WriteObjectValue<global::UKHO.ADDS.Clients.Kiota.FileShareService.Models.Link>("self", Self);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
