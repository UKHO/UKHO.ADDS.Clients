parameters:
  - name: outputDirectory
    type: string
  - name: language
    type: string
    default: 'csharp'
  - name: openApiRepo
    type: string
  - name: openApiBranch
    type: string
    default: 'main'
  - name: openApiSpecPath
    type: string
  - name: GeneratedApiClassName
    type: string
  - name: Namespace
    type: string

resources:
  repositories:
    - repository: openApiRepo
      type: git
      name: ${{ parameters.openApiRepo }}
      ref: ${{ parameters.openApiBranch }}

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK for Kiota'
    inputs:
      packageType: sdk
      version: '8.0.x'

  - script: dotnet tool install --global Microsoft.OpenApi.Kiota
    displayName: 'Install Kiota CLI'

  - checkout: openApiRepo
    displayName: 'Checkout OpenAPI Spec Repository'
    persistCredentials: true

  - powershell: |
      $openApiDir = "$(Pipeline.Workspace)\OpenAPI"
      New-Item -ItemType Directory -Force -Path $openApiDir | Out-Null
      Copy-Item -Path "$(Build.SourcesDirectory)\openapi-spec-repo\${{ parameters.openApiSpecPath }}" -Destination "$openApiDir\ADDS-OpenAPI-Docs.yaml" -Force
    displayName: 'Copy OpenAPI Spec from checked out repo'

  - powershell: |
      $env:PATH += ";$env:USERPROFILE\.dotnet\tools"
      $kiota = "$env:USERPROFILE\.dotnet\tools\kiota.exe"
      & $kiota generate `
        --language "${{ parameters.language }}" `
        --openapi "$(Pipeline.Workspace)\OpenAPI\ADDS-OpenAPI-Docs.yaml" `
        --output "${{ parameters.outputDirectory }}" `
        --class-name "${{ parameters.GeneratedApiClassName }}" `
        --namespace-name "${{ parameters.Namespace }}"
    displayName: 'Generate client with Kiota'
